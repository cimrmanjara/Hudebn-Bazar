version: '3.3'

services:
  web:
    image: brasty-group
    build: ./.docker/web
    volumes:
      - ./nevim/:/var/www/html/
      - ./.docker/web/sites-enabled:/etc/apache2/sites-enabled
      - ./.docker/web/php/php.ini:/usr/local/etc/php/php.ini
      - ./.docker/web/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - type: bind
        source: ./.env
        target: /var/www/html/.env
    ports:
      - 80:80
      - 443:443
    environment:
      PHP_IDE_CONFIG: serverName=nevim.local
      DOCKER_DEV: 'true'
      APACHE_RUN_USER: "www-data"
      APACHE_RUN_GROUP: "www-data"

  database:
    image: postgres:14.1
    volumes:
      - ./.docker/database:/tmp
      - ondra-postgdata:/var/lib/postgresql/data:rw
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - 5435:5432

#  elasticsearch:
#    image: elastic
#    build: ./.docker/elastic
#    environment:
#      - discovery.type=single-node
#      - ES_PLUGINS_INSTALL=analysis-icu
#    volumes:
#      - ./.docker/elastic/hunspell/:/usr/share/elasticsearch/config/hunspell
#      - ondra-esdata:/usr/share/elasticsearch/data:rw
#    ports:
#      - 9200:9200
#
#  kibana:
#    image: kibana:7.17.0
#    volumes:
#      - kibanadata:/usr/share/kibana/data
#    ports:
#      - 5601:5601
#    environment:
#      SERVERNAME: kibana
#      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
#
#  rabbitmq:
#    image: rabbitmq:3-management
#    ports:
#      - 15672:15672
#      - 5672:5672
#    environment:
#      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
#      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
#      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
#
#  mongo:
#    image: mongo:5
#    restart: always
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
#      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
#      MONGO_INITDB_DATABASE: ${MONGO_DB}
#    volumes:
#      - ondra-mongodata:/data/db:rw

  #mongo-express:
  #  image: mongo-express
  #  restart: always
  #  ports:
  #    - 8081:8081
  #  environment:
  #    ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ADMIN_USER}
  #    ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ADMIN_PASSWORD}
  #    ME_CONFIG_MONGODB_URL: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@localhost:27017/

#  redis:
#    image: redis:alpine
#    ports:
#      - 6379:6379

volumes:
  ondra-esdata:
  ondra-postgdata:
#  ondra-mongodata:
#  kibanadata: